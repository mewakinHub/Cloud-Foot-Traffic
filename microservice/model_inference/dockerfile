# Use an official Python runtime as a parent image
FROM python:3.9-slim

# Install dependencies
RUN apt-get update && \
    apt-get install -y curl && \
    apt-get install -y ffmpeg && \
    pip install yt-dlp opencv-python-headless numpy requests Pillow pymysql

# Install necessary tools
RUN apt-get update && apt-get install -y wget && rm -rf /var/lib/apt/lists/*

# Install Robot Framework and necessary libraries
RUN pip install robotframework robotframework-requests robotframework-seleniumlibrary

# Install AWS CLI
RUN apt-get update && apt-get install -y \
    curl \
    unzip && \
    curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip" && \
    unzip awscliv2.zip && \
    ./aws/install && \
    aws --version && \
    rm -rf awscliv2.zip aws && \
    apt-get remove --purge -y unzip && \
    apt-get autoremove -y && \
    apt-get clean

# Set the working directory in the container
WORKDIR /app

# Copy the current directory contents into the container at /app
# COPY . /app
# COPY temp.py /app/
COPY cookie.txt /app/cookie.txt
COPY capture_and_detect.py /app/

# Copy test cases to the container
COPY /tests/ /app/tests/

# Define a volume for output images (this will create a Docker-managed volume)
# VOLUME /app/local_vol/output_images
# Define a volume for any output data (e.g., logs, test reports, etc.)
VOLUME /app/output

# Run the application
CMD ["python", "capture_and_detect.py"]
